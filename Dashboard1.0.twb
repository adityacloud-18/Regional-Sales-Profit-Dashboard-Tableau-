<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='practice1_17376941875090' path='/workbooks' revision='1.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders+ (sample_-_superstore)' inline='true' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sample_-_superstore' name='excel-direct.0lctvyh0y6uhl41gu0whb0rmliby'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/TABLEAU/Practice data/sample_-_superstore.xls' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0lctvyh0y6uhl41gu0whb0rmliby' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0lctvyh0y6uhl41gu0whb0rmliby' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0lctvyh0y6uhl41gu0whb0rmliby' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0lctvyh0y6uhl41gu0whb0rmliby' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_51514749DEA74AC2BB8726BDB6F776C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_51514749DEA74AC2BB8726BDB6F776C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_85C07A736BD14C29B3038250CA259D99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_85C07A736BD14C29B3038250CA259D99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Highly profitable&quot;'>
            <value>&quot;Accessories&quot;</value>
            <value>&quot;Binders&quot;</value>
            <value>&quot;Copiers&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Phones&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;low profitable&quot;'>
            <value>&quot;Bookcases&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Supplies&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;medium profitable&quot;'>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Art&quot;</value>
            <value>&quot;Chairs&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Furnishings&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Machines&quot;</value>
            <value>&quot;Storage&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_504C75E7B4B347028F3EC7FA6B74F483]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_51514749DEA74AC2BB8726BDB6F776C2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_85C07A736BD14C29B3038250CA259D99]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_504C75E7B4B347028F3EC7FA6B74F483]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_504C75E7B4B347028F3EC7FA6B74F483:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[People_51514749DEA74AC2BB8726BDB6F776C2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:People_51514749DEA74AC2BB8726BDB6F776C2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Returns_85C07A736BD14C29B3038250CA259D99]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Returns_85C07A736BD14C29B3038250CA259D99:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[win:sum:Profit:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-14' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[win:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[win:sum:Sales:qk:5]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-14' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[win:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Category (group),Sub-Category)' hidden='true' name='[Action (Sub-Category (group),Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category (group)]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category subcategory'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
        </drill-path>
        <drill-path name='Region,state,city,postalcode'>
          <field>[Region]</field>
          <field>[State]</field>
          <field>[Postal Code]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Adii/AppData/Local/Temp/TableauTemp/#TableauTemp_0lfpndo08rv65b1btsti00nt04n5.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/24/2025 04:40:04 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Orders_504C75E7B4B347028F3EC7FA6B74F483' table='[Extract].[Orders_504C75E7B4B347028F3EC7FA6B74F483]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Orders_504C75E7B4B347028F3EC7FA6B74F483' table='[Extract].[Orders_504C75E7B4B347028F3EC7FA6B74F483]' type='table' />
            <relation name='People_51514749DEA74AC2BB8726BDB6F776C2' table='[Extract].[People_51514749DEA74AC2BB8726BDB6F776C2]' type='table' />
            <relation name='Returns_85C07A736BD14C29B3038250CA259D99' table='[Extract].[Returns_85C07A736BD14C29B3038250CA259D99]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Category]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Category]' />
            <map key='[City]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[City]' />
            <map key='[Country]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Country]' />
            <map key='[Customer ID]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Customer ID]' />
            <map key='[Customer Name]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Customer Name]' />
            <map key='[Discount]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Discount]' />
            <map key='[Order Date]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Order Date]' />
            <map key='[Order ID (Returns)]' value='[Returns_85C07A736BD14C29B3038250CA259D99].[Order ID]' />
            <map key='[Order ID]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Order ID]' />
            <map key='[Person]' value='[People_51514749DEA74AC2BB8726BDB6F776C2].[Person]' />
            <map key='[Postal Code]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Postal Code]' />
            <map key='[Product ID]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Product ID]' />
            <map key='[Product Name]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Product Name]' />
            <map key='[Profit]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Profit]' />
            <map key='[Quantity]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Quantity]' />
            <map key='[Region (People)]' value='[People_51514749DEA74AC2BB8726BDB6F776C2].[Region]' />
            <map key='[Region]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Region]' />
            <map key='[Returned]' value='[Returns_85C07A736BD14C29B3038250CA259D99].[Returned]' />
            <map key='[Row ID]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Row ID]' />
            <map key='[Sales]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Sales]' />
            <map key='[Segment]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Segment]' />
            <map key='[Ship Date]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Ship Date]' />
            <map key='[Ship Mode]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Ship Mode]' />
            <map key='[State]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[State]' />
            <map key='[Sub-Category]' value='[Orders_504C75E7B4B347028F3EC7FA6B74F483].[Sub-Category]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3859</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_504C75E7B4B347028F3EC7FA6B74F483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Person</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Person]</local-name>
              <parent-name>[People_51514749DEA74AC2BB8726BDB6F776C2]</parent-name>
              <remote-alias>Person</remote-alias>
              <ordinal>21</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_51514749DEA74AC2BB8726BDB6F776C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (People)]</local-name>
              <parent-name>[People_51514749DEA74AC2BB8726BDB6F776C2]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>22</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_51514749DEA74AC2BB8726BDB6F776C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Returns_85C07A736BD14C29B3038250CA259D99]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>23</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_85C07A736BD14C29B3038250CA259D99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns)]</local-name>
              <parent-name>[Returns_85C07A736BD14C29B3038250CA259D99]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>24</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_85C07A736BD14C29B3038250CA259D99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[win:sum:Sales:qk:5]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[__tableau_internal_object_id__].[cnt:People_51514749DEA74AC2BB8726BDB6F776C2:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[__tableau_internal_object_id__].[cnt:Orders_504C75E7B4B347028F3EC7FA6B74F483:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[win:sum:Profit:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[win:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[__tableau_internal_object_id__].[cnt:Returns_85C07A736BD14C29B3038250CA259D99:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[win:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Quantity:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Sub-Category (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Highly profitable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;low profitable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;medium profitable&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_504C75E7B4B347028F3EC7FA6B74F483'>
            <properties context=''>
              <relation connection='excel-direct.0lctvyh0y6uhl41gu0whb0rmliby' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Orders_504C75E7B4B347028F3EC7FA6B74F483' table='[Extract].[Orders_504C75E7B4B347028F3EC7FA6B74F483]' type='table' />
            </properties>
          </object>
          <object caption='People' id='People_51514749DEA74AC2BB8726BDB6F776C2'>
            <properties context=''>
              <relation connection='excel-direct.0lctvyh0y6uhl41gu0whb0rmliby' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='People_51514749DEA74AC2BB8726BDB6F776C2' table='[Extract].[People_51514749DEA74AC2BB8726BDB6F776C2]' type='table' />
            </properties>
          </object>
          <object caption='Returns' id='Returns_85C07A736BD14C29B3038250CA259D99'>
            <properties context=''>
              <relation connection='excel-direct.0lctvyh0y6uhl41gu0whb0rmliby' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Returns_85C07A736BD14C29B3038250CA259D99' table='[Extract].[Returns_85C07A736BD14C29B3038250CA259D99]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_504C75E7B4B347028F3EC7FA6B74F483' />
            <second-end-point object-id='People_51514749DEA74AC2BB8726BDB6F776C2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_504C75E7B4B347028F3EC7FA6B74F483' />
            <second-end-point object-id='Returns_85C07A736BD14C29B3038250CA259D99' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_52C2AB85CBE3428D88955761BC4A213F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='region wise sales' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_4084C2F5715A478BA72E71D72465E762]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='shorting' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_95465C2D5B2F479999E3FABDD27FCCBC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='maps' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1D146C2C-0CA7-4F48-A757-9C47DE6D9709}' />
    </worksheet>
    <worksheet name='filters'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Bell MT'>CUSTOMER NAMES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Highly profitable&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Phones&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;low profitable&quot;'>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;medium profitable&quot;'>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Furnishings&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Storage&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_52C2AB85CBE3428D88955761BC4A213F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Sub-Category (group),Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_4084C2F5715A478BA72E71D72465E762]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sub-Category (group)]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Postal Code:ok]'>
            <groupfilter from='1040' function='range' level='[none:Postal Code:ok]' to='99301' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]</column>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]</column>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Postal Code:ok]</column>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Region)]</column>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Sub-Category (group),Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Customer Name:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Customer Name:nk]' value='bold' />
            <format attr='text-format' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Customer Name:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Customer Name:nk]' value='bold' />
            <format attr='font-size' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Customer Name:nk]' value='10' />
            <format attr='text-format' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='bold' />
            <format attr='font-size' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='10' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]' value='CITY'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Bell MT' fontsize='14'>CITY</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]' value='STATE'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Bell MT' fontsize='14'>STATE</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Postal Code:ok]' value='POSTAL CODE'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Bell MT' fontsize='12'>POSTAL CODE</run>
              </formatted-text>
            </format>
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='quick-filter-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]' value='normal' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Customer Name:nk]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{C061B79C-E678-47A0-9BF6-5D478DE9D458}' />
    </worksheet>
    <worksheet name='heatmaps'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' palette='red_black_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' />
              <text column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{5429F59F-1375-4F0D-B955-DAE241A34E70}' />
    </worksheet>
    <worksheet name='hierarchy category and sub-category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{D3CDA746-2FDF-4EE1-93CE-ED0C73C44725}' />
    </worksheet>
    <worksheet name='hierarchy region wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{E4FBC405-1ED1-4A25-96DF-C18AA8A43595}' />
    </worksheet>
    <worksheet name='maps'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Bell MT'>MAPS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Highly profitable&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Phones&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;low profitable&quot;'>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;medium profitable&quot;'>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Furnishings&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Storage&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_52C2AB85CBE3428D88955761BC4A213F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Sub-Category (group),Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_4084C2F5715A478BA72E71D72465E762]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sub-Category (group)]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Region)]</column>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Sub-Category (group),Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' />
              <lod column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]' />
              <lod column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6850829124450684' />
                <encoding attr='density-color' palette='density_dark_red' type='interpolated' />
                <format attr='density-intensity' value='0.72318935394287109' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Latitude (generated)]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DEE2495D-F9E7-4608-9E90-3E2C3D65CA76}' />
    </worksheet>
    <worksheet name='measure values and names'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk] / [federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names])</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{49F6FFD6-2533-4762-8FA1-3430D250881D}' />
    </worksheet>
    <worksheet name='moving avg'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Month-Trunc' name='[tmn:Ship Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[win:sum:Sales:qk:5]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-14' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[win:sum:Sales:qk:5]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[win:sum:Sales:qk:5]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk] + [federated.19w02pc1s272ok1gcxcvf1nh6ziv].[win:sum:Sales:qk:5])</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[tmn:Ship Date:qk]</cols>
      </table>
      <simple-id uuid='{6D70AC83-8063-4FA9-AC86-AED8B082F831}' />
    </worksheet>
    <worksheet name='moving avg2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Month-Trunc' name='[tmn:Ship Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[win:sum:Profit:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-14' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[win:sum:Sales:qk:5]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-14' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[win:sum:Profit:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[win:sum:Sales:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Multiple Values]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[tmn:Ship Date:qk]</cols>
      </table>
      <simple-id uuid='{FA2CCE7E-CCA0-4DCA-88C3-72FA8C412883}' />
    </worksheet>
    <worksheet name='region wise sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Bell MT'>REGION WISE SALES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Highly profitable&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Phones&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;low profitable&quot;'>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;medium profitable&quot;'>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Furnishings&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Storage&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Sub-Category (group),Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_4084C2F5715A478BA72E71D72465E762]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sub-Category (group)]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Sub-Category (group),Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='#000000' />
            <format attr='font-size' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='9' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='bold' />
            <format attr='text-align' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='center' />
            <format attr='vertical-align' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='top' />
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' value='bold' />
            <format attr='vertical-align' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='bold' />
            <format attr='text-orientation' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' value='0' />
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' value='bold' />
            <format attr='text-align' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' value='center' />
            <format attr='vertical-align' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' value='top' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' value='Region'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='10'>Region</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' />
              <text column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{4B85A031-3468-422B-9179-E135A1223E14}' />
    </worksheet>
    <worksheet name='running total'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Month-Trunc' name='[tmn:Ship Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[cum:sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='39' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[cum:sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk] + [federated.19w02pc1s272ok1gcxcvf1nh6ziv].[cum:sum:Sales:qk])</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[tmn:Ship Date:qk]</cols>
      </table>
      <simple-id uuid='{94BA8831-5B68-43AB-BD71-42B5264398D7}' />
    </worksheet>
    <worksheet name='scatter plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Category:nk]' />
              <lod column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='3.3480663299560547' />
                <format attr='mark-transparency' value='152' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{2BC9C837-9B3C-4677-A9F0-D3AA92CCAD1A}' />
    </worksheet>
    <worksheet name='scatter plot 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:City:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Chicago&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Columbia&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Columbus&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Dallas&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Detroit&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Houston&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Jackson&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Jacksonville&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Angeles&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;New York City&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Newark&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Philadelphia&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Richmond&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;San Diego&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;San Francisco&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Seattle&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Springfield&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' />
              <lod column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-transparency' value='114' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Quantity:qk]</rows>
        <cols>([federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk] * [federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{5C3ECCB0-5313-477C-94B2-1E662F3CB370}' />
    </worksheet>
    <worksheet name='scatter plot 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Quantity:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Quantity:qk]' />
              <size column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Quantity:qk]' />
              <lod column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.1712706089019775' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{73C36CE0-A80E-4998-8919-7E492CB3A7E2}' />
    </worksheet>
    <worksheet name='shorting'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Bell MT' fontsize='12'>SUB-CATEGORY WISE PROFIT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Highly profitable&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Phones&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;low profitable&quot;'>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;medium profitable&quot;'>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Furnishings&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Storage&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_52C2AB85CBE3428D88955761BC4A213F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]' value='#000000' />
            <format attr='font-size' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]' value='10' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]' value='#000000' />
            <format attr='font-size' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]' value='10' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]' value='bold' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Sub-Category (group)]' value='bold' />
            <format attr='font-size' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Sub-Category (group)]' value='10' />
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Sub-Category (group)]' value='#000000' />
            <format attr='font-weight' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]' value='bold' />
            <format attr='font-size' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]' value='10' />
            <format attr='color' field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Sub-Category (group)]' />
              <text column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{68619583-F8B1-49E2-9E9C-8C90396FC30C}' />
    </worksheet>
    <worksheet name='totals'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
          </datasources>
          <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Category:nk] / [federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk])</rows>
        <cols>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{DD5201BB-2423-4635-8CEB-79F5595F5467}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <datasources>
        <datasource caption='Orders+ (sample_-_superstore)' name='federated.19w02pc1s272ok1gcxcvf1nh6ziv' />
      </datasources>
      <datasource-dependencies datasource='federated.19w02pc1s272ok1gcxcvf1nh6ziv'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97952' id='19' param='horz' type-v2='layout-flow' w='99022' x='489' y='1024'>
            <zone h='97952' id='12' param='horz' type-v2='layout-flow' w='99022' x='489' y='1024'>
              <zone h='97952' id='10' type-v2='layout-basic' w='99022' x='489' y='1024'>
                <zone h='48976' id='3' name='maps' w='50214' x='49297' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48976' id='5' param='horz' type-v2='layout-flow' w='48808' x='489' y='1024'>
                  <zone h='48720' id='7' name='region wise sales' w='48686' x='550' y='1152'>
                    <layout-cache cell-count-w='4' minheight='169' non-cell-size-w='91' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                  </zone-style>
                </zone>
                <zone h='48976' id='8' param='horz' type-v2='layout-flow' w='20032' x='49297' y='1024'>
                  <zone h='48720' id='9' name='filters' w='19910' x='49358' y='1152'>
                    <layout-cache fixed-size-h='45' minwidth='260' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                  </zone-style>
                </zone>
                <zone h='48976' id='13' name='filters' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Postal Code:ok]' type-v2='filter' values='relevant' w='10061' x='89450' y='1024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48976' id='14' name='filters' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]' type-v2='filter' values='relevant' w='10060' x='69329' y='1024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48976' id='15' name='filters' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]' type-v2='filter' w='10061' x='79389' y='1024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48976' id='16' param='horz' type-v2='layout-flow' w='48808' x='489' y='50000'>
                  <zone fixed-size='781' h='48720' id='17' is-fixed='true' name='shorting' w='48686' x='550' y='50128'>
                    <layout-cache fixed-size-h='466' minwidth='200' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97952' id='28' param='vert' type-v2='layout-flow' w='99022' x='489' y='1024'>
                <zone fixed-size='280' h='48720' id='7' is-fixed='true' name='region wise sales' w='48686' x='550' y='1152'>
                  <layout-cache cell-count-w='4' minheight='169' non-cell-size-w='91' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48976' id='13' mode='checkdropdown' name='filters' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Postal Code:ok]' type-v2='filter' values='relevant' w='10061' x='89450' y='1024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48976' id='14' mode='checkdropdown' name='filters' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]' type-v2='filter' values='relevant' w='10060' x='69329' y='1024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48976' id='15' mode='checkdropdown' name='filters' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]' type-v2='filter' w='10061' x='79389' y='1024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48720' id='9' is-fixed='true' name='filters' w='19910' x='49358' y='1152'>
                  <layout-cache fixed-size-h='45' minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48976' id='3' is-fixed='true' name='maps' w='50214' x='49297' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48720' id='17' is-fixed='true' name='shorting' w='48686' x='550' y='50128'>
                  <layout-cache fixed-size-h='466' minwidth='200' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8644CBE4-ED85-4613-A39E-812ACAC8B0EE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='region wise sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{2259BB79-E50E-4750-B9D4-A1D0088F2DBE}' />
    </window>
    <window class='worksheet' name='heatmaps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Category:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D461DB64-45F4-4A4D-BC25-FD26AC006E3B}' />
    </window>
    <window class='worksheet' name='totals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Category:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C606296F-528D-4B38-A2AB-7D95C0F5A2B1}' />
    </window>
    <window class='worksheet' name='shorting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Sub-Category (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDEF09B0-CA00-4744-A157-4E6F2DA86AB2}' />
    </window>
    <window class='worksheet' name='filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Postal Code:ok]' type='filter' values='relevant' />
          </strip>
          <strip size='160'>
            <card param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]' type='filter' values='relevant' />
          </strip>
          <strip size='160'>
            <card param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Customer Name:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Postal Code:ok]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Returned:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53512DD0-C1EF-413B-A168-42210927D2DC}' />
    </window>
    <window class='worksheet' name='hierarchy category and sub-category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Category:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF90F9E8-37D4-47EA-AC53-AE1B69EC2C3A}' />
    </window>
    <window class='worksheet' name='hierarchy region wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04229A95-1FE2-4192-BB09-087D56EB3CF3}' />
    </window>
    <window class='worksheet' name='running total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[yr:Order Date:ok]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34944816-3981-4614-9692-DEEF84D15A7A}' />
    </window>
    <window class='worksheet' name='moving avg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[yr:Order Date:ok]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DE9AD78-C345-4A0F-9188-DA563B67C1F0}' />
    </window>
    <window class='worksheet' name='moving avg2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEE27CE2-7874-4488-BCED-64DADB21B95D}' />
    </window>
    <window class='worksheet' name='measure values and names'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[:Measure Names]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Sub-Category (group)]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DD41333-1CB7-477D-B1C7-59AF653FFEDD}' />
    </window>
    <window class='worksheet' name='scatter plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Category:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89D3244A-B941-46E0-9AB0-BFF47260F6D1}' />
    </window>
    <window class='worksheet' name='scatter plot 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{503D6BF5-F40E-445E-94B5-3B93E295320F}' />
    </window>
    <window class='worksheet' name='scatter plot 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Quantity:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EC3DDA0-360B-4D66-8534-F5BCD31E8159}' />
    </window>
    <window class='worksheet' name='maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:City:nk]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Postal Code:ok]</field>
            <field>[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA2706D4-A60E-4583-A4B7-37505084786F}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{40BC628C-95FA-4362-838A-7F0B02910364}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='filters' />
        <viewpoint name='maps'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='region wise sales'>
          <zoom type='entire-view' />
          <highlight field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='shorting'>
          <highlight field='[federated.19w02pc1s272ok1gcxcvf1nh6ziv].[Sub-Category (group)]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{644F950B-9220-40C2-A403-CE44F818C6F2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='25' name='Sheet 16' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAZCAYAAACvrQlzAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEbUlEQVRoge2Za0hbZxzGnw5h61zLoLYqK8jyoWOjdFBjwNV4qewMetx0q9Ja6ZHGjklb
      7Zrp6BxmGJnZ/GCGZsMyW7TUVcGNVZt01XYsZYrW7FKnFgVvdZ2xzUITTDo9B/77YOc0OYkx
      njIY5wf58p73/7zPeXhvh2wgIoKMZDzxXxv4vyEHKjFyoBIjByoxcqASIwcqMXKgEiMHKjFy
      oBIjByoxcqASIwcqMWEGuoDpLiOOZachUamEMjEN2SWtGF0IXiU4f0GrTgNGrYRSqYSa0cDY
      44SwXHm6CwYNA7VSCaWagcbYA+eyDjc+Wqz1/eU1Ta3br3ugCSVZ6kVvWSVoGnCLq013wZCr
      Fh+TwuDXGpbYk/V0Y9xDPBHR/Cz1mzhKKv2O5gIVOb6lE6kHqar9N5qdJyLiyTPeTqXMm1Q/
      8qiPvY0Kkzgy9c/SPBHxnmFqOcEQo+8OrEt2aivMIdMQvz6/kxeIS+Lo7LCHeOLJM3yWuCSO
      LkwuE5q/Q51VBymVPUl6bQYdapz0GyusQCfHxsjfvpV08TqyBipyjNGYS0Sr8dCSMVt1GhW3
      +3Sas5IurYBa7AF0R+opp7CNAj0OzS9PfQaGtOaVY7vMWmIMfUu1ky3lVNU5Th5+pe/lhLXk
      4xQKRPg2ul14ELsNUYGKtiig2OzbKMD1wI2YrVEA/oLjfix27/LpFPkK0tVDuPmTR1T2asM3
      2H0kE9Hr8juK/u6dSE9ZOfbmlHTs7O7H6D86B/T44NXn8bSf2L9Icyi5B/B50Rk8W3oYL4Vc
      JGDGUoayn7NxnIkE8BQ2bbqD8SnBp18E4hQK2O87RFXOOzU4ogryhiH5deCeJwbRkT79IqMR
      47kH8ZHFWWegApw9RuRmVsL7znmUJ/tNQXEWRtH6bhbevhKPmi/zoXiUh2rfG+j9uAwdE97F
      g0rwYmbwGi73zgQc/7mcjKCzM2S/oqsrCttiQxZfJMjWEwQXWXUscaZbJLItBoQfaySOLSXz
      H4EPEJEqsuqSSN/t326rZkPUWM3vEJkytGT2PfnmzKTNMNGQSIWke6jbUoFqvI+647sQ4pwE
      hGGcOf099tZWYV/sGpaouxOXelm8pvJv/8qaIpHfHUjYM4jr1pXXJLf1Ogb3JGBH6G7DWfJ/
      oqvDjhxNcuhhAsAtM9pfLECeIkiYd6+huWMQM14BgADvRBcqC77AMx8eg+82OXqxAa7DnER+
      I6DK5eAwFOHcbS8ECPDePocigwNcrsr/QAvCBqK1/uvZg8rEYlzixZ6xqLFVIBmAcPMTMOVP
      wnj1FF4GcLc5H5nGIVHFF4q+RnN+HOCZgKW2Ep9ZBuB8CGzcrsJbxeUo2hu78qXcFryXM4AD
      5tN+QQOzaD2ahR9fv4y6zC0h+wUWL/Z6XQN++P0hNm5PxVG9DvlLt44pNOXtR92IeCpsjQ0V
      yQh3D10NO7UVslRtW8teKQ28rZrYVe6lj5PH8i0vDLehL6EWp+LXeJ1ZN250ts9B++n+NZz8
      0vI3nn4LzzcDjG0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='filters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='heatmaps' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='hierarchy category and sub-category' width='192'>
      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
      n/AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='hierarchy region wise' width='192'>
      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
      esOt9Xxe6oMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='maps' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='measure values and names' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='moving avg' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='moving avg2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='region wise sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='running total' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='scatter plot' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAet0lEQVR4nO2dWXMb2ZXnfzczsRAgAQLcd1F7qapUpVJVeSvb1WW7o93tGbsdPdNvMxEz
      j/Ml/EHmYWJ6Yl6mI6Y7utv2xLjdHrfd5arWWpIokhIpkeK+gQSxZ+a98wBJJRY3AFQCCeL+
      IioqmHlxcJTIf+bdzjlCKaXQaFoUo9EOaDSNxFMBSCkrbmvbtmd+uK7bVHallHj1Ym62a+Gl
      bdd1vRWAX3pXXvnhpd1m9NkrvPTZqvWDczNT5FWI8f44Dx89ZeDMRYSTpSNkkJERehPR1+2v
      RvPaqUkAbnGbpwub9A8PsbC4ypvvXuPx1CTSzrPoWrx77SpSyqq6QFJKT7sUXtj20q4QwpMn
      X7NdCy9tSylrEwBKkegZJJTPkLbM58co/2iui1IgKP8thKjYbDVtq8Ur217abUafvcIr2zUJ
      wAwniJpLZIwQl0a6mbhzm4HxSwg7SzwaZG1zh4HuOEopDKPyYUY1bavBMAxPbHtlVymFEKKp
      fPbKrpe2DcNAeLkO4LoupmlW1LZYLBIKhTzxw3EcLKu2l10j7Lqu65kAmu1aeGnbcZwau0Ae
      4OXrs1lQSqFyOZztbYxAAJFIICwL9LXxDC0AnyCzWXKffU5pbg7pOOU3QCRC2ztXCV250vLX
      xyt8I4BWRhYKpH/xS+TOzp7jKp8n94fPkPkCbdff0yLwAL0Vwgfkb9/Zd/O/SuHePdzNrTp6
      1DpoATQY5TjYc3NHN5KS0tzTuvjTavhGAH7ZNlFvVKmELBWPbSd3M3XwpvXQAmgwwrIQ5vFD
      MRH2Zoq41fGNAFp2gBcIEBjoP7ZZcGSkDs60HloADUYIQdt77yGCwUPbBM6MYQ0M1NGr1sE3
      AmhlzM5O2n/wfYyOjn3ngmfP0v7tbyM82mbQ6vhmK4Rt2wQCAU/8aJblf+W62AuL2FtbGIEA
      gcEBrETita4EN8u1qIdtX22F0IAwTYJjo5jDQ57tBdLsxTdXuFVngTSNRQtA09L4RgCtOguk
      aSw1RoRJph8+wLaiXBzrY/rRE4bHLyDtHNGQSaZkkYxHqjKpBaBpBDW9AaRrs7C0QlcyycKT
      OcYuXODZ01k2N9aZnp6lvb3tdfup0XhCTW8AYQb5+JPvcffmLcId7YSDQSxDsLO5gmslsAyB
      67q4rltx3955vgfeC5otF86LoPhqkgpUSrNdCy9tu65bY1oUp8CDiWncQJjhnk7u3r5Fz+AZ
      2mPtxEImyxs7DPXEASpeB1BKeTaPDHhmu9lCIqG5roXXtn2zEFYqlQgesR3gJDTb4o+OCa6P
      bcdx/DMLpKdBNY3ANwLQs0CaRqAFoGlp9F4gzelBKezlFUozj3HTu4hQiODIMMHz5xGHjEW1
      ADSnAiUluc8+pzgxsee4PTdHYXKKju9/DyO6P2Gzb7pAGs1JKD6c3Hfzv8Dd2CD7238+cKLF
      NwLQs0CaWlFSkr9798g29tISztravuNaAJqmR6Z3Ufn8se2c1dV9x/QYoElQSuEsLlJ89BiZ
      yWC0txM8f47A8HDLz6ApWeFWCXf/1hLfCEBHPx2Ocl1yn35KcWr6y4Nra5RmZwldvEDkm988
      dJajFTBjMbAscJyj23Ul9x3Td53fUYrixMTem/8VitOPKDx4AC3chRSWRejixSPbGLEYgcHB
      /ce9ckrzelBKkf/i3pFtCl/cQ3mwc7SZiFx/D6v/4PxKIhym/ePvHviW9E0XSHMwMp1GFQpH
      tlHFIjKdxkwk6uSV/xDBIB1//AMKExOUZmaRuRwiECAwMED43XfK3aQD8I0A9CzQwVT6ZG/1
      NwCACARoe+cdwm+/XR4PGAaY5pGTBFoAPseMxSBggX3EAM+yDn3CtSLCMKDCrfU1jwGUtFle
      XUdJh5lHjyi5kmw2i3RL7GaOn5PVVIhpEr546cgmoYsXy7MgmqqpuUzq/OwMC6k89s46nX3D
      TE4+IhIycPNZhi9drdqkngY9GCEEbdffw0mlcJaW9p23BgaI6OoxNVOTAIqZDR4/W8ex86TC
      IwzFY6wvL7OzuYwbSHIpaOiY4BOwLyZYCNr+6GPs6enyAC+bxYhGCZwdJ3jpEq5hHDsH7rXP
      zRoTXFNIpJIuxZLN1PQ0Q91xni5vEO8ewJQFOgJQDHUx3BPXuUFr5KiQSCUlSAWGqClhbrNd
      Cy9tO47jn5hgLYAv0THB9bHtq5hgjaYR+EYAXuTA0WiOwzcC0GgagW8EoKdBNY1Ar568RCGz
      G7jLd1HZdTACGMlxzL63EJau0Hha0QKgvA3DXbyB8+hXIO2Xx+XaBO78ZwTe+UuMSFcDPdR4
      he53ADL1BGf6l3tu/heo3Ab2vb9GuaUGeKbxmpYXgFIK9+nvjgwoUZlV5PpkHb3S1AvfCKBh
      06BOAbm7P1j6q8jUXB2c0dQb3wigYShZ/u/YZt7tddE0Dt8IoGHToFYYET5+L73R3lsHZzT1
      xjcCaBTCMDEHrx3dyApj9r1ZH4c8RjlFZG4LVcrqICT0NCgA5vAHyNQccmNq/0lhErj8pxW9
      JfyMKmVwZv4Je3UCV5bDBY3YENa57yFigy0bT6B3gz5HSQd34Sbu0m1UMQ3CxIgNYJ35NiJ+
      cPKpZtkNqgppSrf/CpXbREq5164RIPD2X2B2nwdqF0Gz7gbVAvgKSrrgFJ8HVIeOfDI2gwCU
      UtgTf4NcKadW2ScAgFAHoW/8F4RZe4mqZhVATVdYKcXuzja72TxKSXa2t3GlwrZtlHQpHRXA
      fQh+2Q0qDBMRjCCs8OnoFrhF5OqDo9sUd5Ebj+vjj8+oMSbYZXt7h4XlNUb7O8m6BgtrKUKG
      gylLxAfPkwzo4YUfUPntyqZ5c5t18MZ/1FYn2LAwKVFyIVOQnL98gUeTU+ykVnEDXYy3h6qO
      CZZS4lQY11otzRYH+zrrBCvMPXaUUgfadYVZcVzxQTRrTHBNApBOnrxj0oZLKGwwNTUFZoh4
      1wAhHFZTGfoS7YCuE1wLr3UM0N6NjHah8ingkDEAEOg+h3HCf0tT/n61fEiYYfr7ehgYGqIt
      FCCbzRGJRpGui2kaOI4/+vOa8ryOdfZj7Ad/Axz8Njb63kZEm3uhTylFJl/i3uwaK1sZlFJ0
      d0Z560wPyVjboeM5PQvkQ7uvfRpUKdz5P+DM/gbpFF+xKzB63yDwxr85ccxDo2eB5la3+dXN
      J5Tsvd0lQwi+fXWUN8a694nAcRy9ENYKCCGwxr6O0X0Be+U+RjENgTaMrvMYiTGEaO4NAdl8
      6cCbH0Aqxe/uzZOMtdGfbN933jcC8Ms06OlFYES7Mcc+8rSv3gjuP10/8OZ/gSsVX8ys0peI
      7nsLNLf0NRpgdStzbJu1VPbAEZBvBHAqFp00DaGSUexhQ10tAE3T09MZObZNVzxy4E4n3whA
      o6mVK2d6MI3DH6BCwFvjvQc+ZLUANE1PZ3uY774zhmXuv52FgPcvDTLS6/MSSRrNSbg40kVn
      Rxt3H6+wmioH+3TFI7w13stob8z/C2GlUolghWVtqqXVF8JepaLYCCXBfZ4ixgxWND5r9ELY
      C5RSLwfFQhw9tvTVQpgOz2s8Sink2kOcZ5+jchuAwGjvwRz7FkbybFNMVAghqMZN3wigGS7u
      aUYphTPza9y5f+HVPUMylUVuz2Od+wRz9Bun7nfyzSD4tF3YZkNuzuy7+V+iJM7Mr1G7y3X3
      y2sOFUBm7QkbOUVmbY6NnN6mcNpxF29y2G5RAJTEXbxVN3/qxaFdoH/59T8wW+wl0Wbxpz8Z
      qadPmgagMhVkx6ugTbNx4BuglE0R7b9Am2Hj2HlK3gRqafyEUcFsXSVtmowD3wDKKRLt6OCT
      P/uY3igEgnv750raPHwwwWa6yOXxXuaWN4kl+zFVnoghMeJD9CWiVTnSrLNAyi4gN6aRmZVy
      KpXOUYzkOMLwzfxCRRido7jHxAUbnaN18qZ+HPgrBSIxnk7cZuJZhu4IfO073yce/lIEwggw
      NjpCaX6NVLrItevXeTQ5xe7OKlvBLj44E606Jti2bc/SI3oVU+qk5rCn/q4ceP4KRucI5uUf
      I9o6a7L7OmOCv8qh12LwfeTK/XJKmIMIRDD7rx0at92sMcGHLoS5pQy/+Pn/wQl08qMffoL1
      yl4L6Ra4+8Uj3rhyifX5GYLJPlZXN4gEQRXz9Jy9Qmdb4FQvhMncFsXP/yvCLRx4XrT3EXz/
      PyHM6qPcGrEQppRCrk9hT/wtuF8RQSBK4K2fYiTOHDpb55eFsKrtHnaysPUM2T5Ee26RjYKk
      P/LKjawE0bYAT+cWuHD+Agtzz7h86TxOsUBbOEQmVwCq++G9uvm9QCmFM/sblJ07tFi1yqzi
      Lt7CGv1anb2rDSEEZu9ljI5+3JUvUE5Z2CIQwRx8FxHcH011GjhUAMJqIxrO8sbbH9PXtvdH
      NqwQFy9ffvn32Pg4AMFIeVtqR3t1/X/wNib4taNc5Pbx9QLk1gw0iQBeINo6sca/02g36sbh
      71hhcvez3/L//un/ksp7P0BtupDI5hyza77CwW8AJZmcmuGjH/wZH169VGeXmgBhYrT3Igs7
      RzeLDdbJIU2tHPgGKGzOkwn2olLz7NSpNlwzbYUQQmCOfg2OyqZghbGOqzugaTgH/4JmkEd3
      fs/t+5P8r//x39jIet89aSYBABjJc5jj3+XAlOJmiMCVHyPC8br7pakO38QDNGViLNtG7C7g
      Lt5A7X65EGaOfg0R2Z+IqVIaHQ/gJ7te2vZVPIBfUQq2dnPMLm2zmysSDlqM9sUZ7O4AITCT
      45jJ8Ua7qakRLYAjUEpx69EKN6eWcOWXL8ovZlY5N5jgo7eHT12SqVbDN/EAftsLpJRicn6D
      zx8u7rn5oTwD+ngpxe/vL/jOb011aAEcglSKG1NHB4A8WthiO3PwVghNc+AbAfhtFmgnUyST
      P3oOWCrF0sZunTzSeIEWwCHYFe5AtHUthKbGNwLwG7FICKMCUXa2h+vgjcYrtAAOIRy0ODt4
      9H7+jkiI4UMyjmmaAy2AQxBC8PUrw8SjB1dOCZgG37k6cmA6Pk3zUPOvJ10bx5UoJclms0il
      cBwHpSSOU30Ej99mgaD8hP/JR5e5PNpNOGhhGoKAZTDSE+PHH11iuEc//ZudmlZxlJQ8vP0p
      Vv+bdLopNvIOwgwTFDYBZRPtO0t3rLoAaj8KACASDvBH185QclwKRYeAZRAOWgghPCvrqqkf
      NdYJNjh37jyLOcVO3uXy5cvlOsE7q7jBLj68EK46Jth1XV/XCTaASMjcY68Z6gR/lWarmeyl
      7ZrrBCvlsLa2zkY+xFDMYGZmBtcIEu8aICBt1nZy9MbL0WEnqROslERlN1DZ9fJGs47+8g7L
      GqZMW7VO8EE007Xw2naNVgXtXUOcQ9CZTJDZ2aEj3ol0HSzLpGSf/EmuCmnsh3+HTD0B9fxJ
      aAYwe99EdI5AKQPBdsyuC4jQ6YxX1XhPbV0gYZLs7n75d2ciAYBplLczh04Y4K5KWUq3/wr1
      ap4apZA7i7jPPodQ7GW2YscIYI1/B3PsG01f7lNTf3y4lbGcccFdvouy8yCM5094gdp5Vm5S
      2IbiDoQ7Qdo4M/8IZgBr5MOGeq5pPnwjgHJhA4W7dIvSnf9Z7uI8R+ZTUNiBYDvCLLus8tuI
      8JcLVc6T32L2vYkIVp+RQtO6+KbPoJRCbc/jTP4cnK/ssJQOStpQTJerlwDqRQWTF9g5ZHqx
      Tt5qTgu+EYAAnLnfo5QLX82rqWQ58la5L1P3vXgT7KGU89pNzSnDN10goRzc3WWEMBDhOOrV
      ffbCRPE8/Ny1IdCGCCf2G9FB6OXJgkIBZ2MTbBsjFsNMJg7NYNfq+EYAKPVyulO095UTzr7I
      UWmY5WzL0gFU+Ub/ys0u2hIY8aE6O+0vlJQUvrhH4f59VPH5tRMCq7eX6Le+iZk44KHR4vjn
      sWAGXj7VhRnA6L4AoY7y30JAsDwTJKK9GInxvfEDhol16YcIs3nyi75ulFLkb9wgf/Pmlzd/
      +QTO6irpn/8CN51unIM+xT9vAGFgDr2HM7lU/tMKYXRdADuPcvIIRPlY5+ie9QHR3o91/vsY
      LZ6ZwU2lKDyYOPS8KhTI37xF+Nsf1dEr/+MbASilsAbeRW3P4a7cA148+SOIYASESeCNH2H0
      vYUqbENxF4JRRFsScQorl1SLPTcPx+wdshcXCZVKoDNZvMQXV0JJF5VeQtppjO6LEO5Ebj4u
      jwMMA6NjAOvMR4j4SLkObKQLIl2NdttXyFz22DbKccrdo+dZvDUNFoBSCpVdx3749zjb86gX
      MxVmEHPoOta73yxPiVZYrbyVMdqOv6mFaSKaqA5DPWjoIFgVtind+u+o9MLeDJtuCXf+U5zZ
      3+ibv0ICoyNwzFRnYHAQETo4wq1VaagAnNnfgH344pW7dBuVXqqfQ02M2dVF6NLhqexFMEjb
      9ffq6FFz0DABKKeI3Jw5ppHE3Ziq3rZSKLeEcgoo6V2ghp8QQhD52oeEr17dN8g1u7ro+OGf
      YMT1QuFXadwYwCmWV3WPo5g5vs0ryMwaztN/Rm4/A9dGhGOIvrdRIx/UVLCumRCmSeT964Tf
      uIyzto6ybYx4DKunB1FhYFKrcWIBbC3PMbu0Qbx7EFPmiZoSOgaOrxNshcAMgiyL4NDQyeeL
      YcejcDdnse/99Z4qhyqTx00vw/ZTAm//+4P3EJ0mhMBobyfYroOEKuHEd8PGTuFlneD0ziqb
      wS4+GC3XCZZS7olrfbHlWQhRDl5JjCNXvgD21gh7OegVJkbnWYrPVzbLn9s7IH7xOeEWcB/8
      bTmG4JXve/F/Z30a9fR3GKPfeukHsC/scK+P4shzr8Y8v/TjCB8PCnE86NyLkMgXfPVzB+XL
      r/T7y5k71IHnDvq3HnXu1e96Ybea61ep/6VSCdd1K75+lfovpTy5AEKGy3Y6TcmFeFc/bj5H
      uuAQC5dNHxUTbJ7/hFJqFuwcSql9bc2h61jJ0YpmgZylCaSdOXDTl5QSwzBQy3ewxj9CGK+n
      KySE8CRW1TCMI2OCT1JIxCufvbLrpe3XUiBj9PxFZmaecPnyBexCnkhbiHSmAOHjX8FGWyfB
      6/8R++HfI7bnvzxhhTCHP8Q6+92Kp0BVZvX4RnauPKaosYL7sT4oRa5os7mTRypFoiNMLBLS
      07g+5sQCEIbF+QsXAAhGy/3+eKzy/qcR7SH43n+gtL2IVdoBM4gRGywXZq7mxhGVDPLE0YXt
      ToDjSj5/uMjE3PrLhLmmIRjr7+Q7V0dpC53uAXiz4osRoTBMjI4BzMBozTaMzlHc+U+P/p5I
      oopBdeUopfjHm7PMLm/vOe5KxexSinS2yL/91kVCAV9cbs0r+Gc79AkxkucQsaPjAawzH3nS
      HZlb3dl387/Kxk6O+7Nrr/17NSfn1AhAmBbBN/8cEe056CTW+Hcxet/05LtnFreOb7OUQvo0
      /WMr45t38utIAygiSYIf/Gfc5S+QW7PgFBGRLsy+t7ESwxxY0/c1cFwlGYBcwS5Py+kBsa/w
      jQBeF8IMYg2/D8PvvzxWzjnq3Y1XyQA3HLIQHvqgqQ3fdIG8yoNZD8YHjo+1PdPfqR/+PqR5
      7zofcW4wwVD34bNL8WiIq2f79HqAD9ECeA0YhuCPPzjH+aHEnrpiAuhPtvOjb1wkEtbrAH7k
      1I0BGkU4aPH962dJXSywmipXzOmKtdHbGcUw9JPfr2gBvEaEECRjbSRjbY12RVMhvukCeVEN
      RaM5Dt8IQKNpBL4RQDNPg2qaF33XaVoaLQBNS1NjlUjJo3s3CPVfImnlefR0ke7BcQw3R3sA
      ioHE8THBGo0PEKrKCtUvmmc2nrFWiiB3Nxi/dInHk1Nk0+uoYILr195CPq8TXGnf3rbtE4X6
      HYXruhWXa/WD3Rd1gr1YOW62a+Gl7ZrqBK8vP0OF4sQtC0pgISmUSjhSEe/qJb+bpehIwlbZ
      4Uodd123OevM6jrBntv10nbVVnsHR5GyxMMvZikok8uXzvH00TQj4xeRpRwdIyG2dzOEEzEv
      /NVoXitVd4GqoZpXV6lUIuhR4taD0oj42a6Xb4BmuxZe2nYcxz+zQHqnpKYR+EYAGk0j0ALQ
      tDRaAJqWxjcC0LtBNY3ANwLQaBqBbwSgZ4E0jcA3EWFaAPWhZLtMLaRY2dzFlYrueISLI11E
      w8GWzFrhGwFovGdzJ8cvP39MOvdlIq+ZpRR3Hq/wybVxxvrjLfcg8k0XSOMtRdvhF58/ZjtT
      OOCcy69uzrKZzh/wydONFkCLMDW/yW7u8BSOtiu583jl8FJVpxTfCKDVLny9WdxIH9tmZTPT
      cgl8tQBaBMc9/vo6UtJqP4NvBNBqg696k+gIH9smHg1jtlgSLy2AFuHyaPexGequjHW33O9Q
      kwCUdJh88AV3H0xRyKS4c+sWq6ksa+tr5NMbrKWyr9tPzQnpikX48PLQoTf4xeEk54e76uxV
      46kpIEYpiXQlD+5PEA4HOHPxMo8nJ1GySMk2eOfaVXheI9gPMcHNFgTiZUzw7OImd2bW2M4U
      USii4SBvnunhrfGeE31fswbEVG11dXEOFYqxvTLP8NnzbC09L28qQEkXKUGpcmbkV4sVV4KX
      A2GvbHth18vrMNoXZ3wwSaHkolCEA9bLFeCTfm8z/n41vQHc0i43bj4kEuvk3Gg3U4+eMnDm
      IsLJEo8ESRUMBrrjOiSyRnRIZH1sO47jn5jgYrFIKBTyxI9m+9G1AOpjW8cEa1oeLQBNS+Mb
      AWg0jUALQNPSeB4P4LpuRe0cx/EsFaCUsmI//GJXCOHJ1F+zXQsvbUspvRVANQlNg8GgZ8lV
      q/XFD3YNw/BsXNRs18JL277pAnlZIcYr281m10vbzeqzp+sAGo3fMX/2s5/9rFFfrpRi6sEd
      nq1uEwu67LoBFufn6EomT2R3YWaS2YVlwpF2ZqYmWNnYwVQOBALMzS2QSHZSbeciv5vi87sT
      jA4N8PjhfeaW1knEwty9e59cCfK5NCHDZXEjS2dHpGK7SjpM3/2MfLCXUmqB6Zk5jECElflp
      5hbX6IoKVnIWa4tP6UwkquoWLc3NMPvkCSIY5cmjh6xv5whRYGLqEcqKkN7ZxMnukJNBIqHK
      92EVMikmJh+xmc6T2Vzi2dIK4WgHjx/eZzWVxVRFhBlgbn6RZKKzYrsAqwtPmZmdRRptPJt5
      yOJ6mlhIcW9iipIKkN1NIewcWzlFR+S4hVPFk+mHPJlboL09yM2bDygpgbO7wdTjJ4Si8UZ3
      gbJgddMXNtnOprn5rzdI9A6e2GquUATpYmd3aOsaoqdNspFKc/PGLbr6Bqq++QGscJRYNAQU
      cehgrCfG5IMZLlx7DzefZmt9hTsTswz2VbujUjDU30XedikU8oACUcRR7Zzp7WRra4vbt27Q
      Fu/ZU4W+EvpHxulJRNjZWKezb5yosnm2kebqO1dJb66xND/L07Vdkh3V1TUORuJcPDuKa9sU
      igWk61LM7RDrGaMDh+1Min+9cZu+waGq7AIkkkkEUCruEIz2kzQVT1Y2ufLuNfI7G6wtPWPy
      6Rp9yY4KrAmSXUmUkhQzGaRlgYKt3SLX3rnE2uJKowVg4jpFio6DZVoMDvSS3tk9sdWxc5d4
      8/I5FheeUSqVKJZcLCvAUH8X6d1MTTYDgeBz4Rg4bpFiqUQoaJAv2DiuJBTtINFmkSvaVdkV
      hkngeTGR3qFxrr51mZVnyzhuiZJdwjAMBocG2U3vVhmtpVh4Mo1oH2SkP0bJLlJyHUzlYts2
      roJ4sgfTLWJXmZXPzqaYfrbBlTfOM37hCm9dGmDuyTolu0TRdbCsEAO9naTT1W+LF1aY8bEB
      tlNpHKdsLygUpZKDIxXReJI2w6HoVOKzoq09SW88TEa18/XrV8lureG4DnapiDKtxqZFEYTp
      bIecitEZ6yCabCeztYaCmp7SL0in1ljZSHPh7ffYXHyCHUnSH48QbO9ga20dqaDawKettUXy
      uTxziym6O0PsFODSW1eYnpykq3+UoOmSiHWwsrFDPNJdsV2nlOfxQoqiUWRXdLG8usbI2fPY
      O2uk8oqLIz1YyQj27gZSKcwq3gLFks3O8jzhsbMYhWeEEj0MJtqYfjTDyPgF3FKW9mGL3UyO
      rnh7xXbzuTzSzvN0fomoabOWyvL2e1dYmXuM1dlDV0eQ8GCcjY01FPGqfsut9SXWtjKcOXue
      3bUFSuEkY/1xph5NMjh6Htw88bFhNtNp2rqO614pFudnydomY30W0w8nSPQPkWwTTM2scOHi
      BT0I1rQ2vpkG1WgagRaApqXRAtC0NFoAvkZx7+Yf+O3vPyVbdF4eXdzeaaBPpwudHNfXlLh1
      Z4qf/OW/w7LT/PYPdwjGBgj3dLD5+AHLG1nOnh3g6bN13n3/G/TEj8/9o9mLfgP4GRXkpz/9
      Ib/5h//NvelZ0gWH6YeT4Jb43ac3sAyboiMoZtNkq1x/0JTRAvAzyubBg0naOnvpiUWwrBAj
      I4N0tsf54NqbBKKdhANB2iMhbMebrcinHb0OoGlp9BtA09L8f7ervdKBnf3ZAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='scatter plot 2' width='192'>
      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
      BfDZ1fz/vILTlCeo/z8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='scatter plot 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='shorting' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='totals' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
